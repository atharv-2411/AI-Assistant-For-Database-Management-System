```python
from django.db import models

class CoffeeType(models.Model):
    """
    Represents a type of coffee available in the menu.
    """
    name = models.CharField(max_length=100)  # Name of the coffee type
    description = models.TextField(blank=True, null=True)  # Description of the coffee type
    price = models.DecimalField(max_digits=5, decimal_places=2)  # Price of the coffee type

    def __str__(self):
        return self.name

    class Meta:
        db_table = 'coffee_types'


class Employee(models.Model):
    """
    Represents an employee who takes coffee orders.
    """
    first_name = models.CharField(max_length=100)  # Employee's first name
    last_name = models.CharField(max_length=100)  # Employee's last name
    email = models.EmailField(unique=True)  # Unique email address
    hire_date = models.DateField()  # Date the employee was hired

    def __str__(self):
        return f"{self.first_name} {self.last_name}"

    class Meta:
        db_table = 'employees'


class Order(models.Model):
    """
    Represents a coffee order taken by an employee.
    """
    employee = models.ForeignKey(Employee, on_delete=models.SET_NULL, null=True, related_name='orders')  # Employee who took the order
    order_date = models.DateTimeField(auto_now_add=True)  # Date and time of the order

    def __str__(self):
        return f"Order {self.id} by {self.employee}"

    class Meta:
        db_table = 'orders'


class OrderItem(models.Model):
    """
    Represents an item within an order, linking coffee types to orders with quantity.
    """
    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='order_items')  # Related order
    coffee_type = models.ForeignKey(CoffeeType, on_delete=models.CASCADE, related_name='order_items')  # Related coffee type
    quantity = models.PositiveIntegerField(default=1)  # Quantity ordered

    def __str__(self):
        return f"{self.quantity} of {self.coffee_type.name} in Order {self.order.id}"

    class Meta:
        db_table = 'order_items'
```
